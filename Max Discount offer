You are given an array of N elements representing the prices of each item. You are also given a discount offer that allows you to buy K items at a reduced price. The discount offer works as, for very most expensive K items you decide to buy, the cost of the maximum priced item out of those K items will be waived off.

Your task is to find and return an integer value representing the total cost after applying the maximum discount offer.

Input Specification:

input1: An integer value N representing the number of items.

Input2: An integer value K representing the number of items to buy at a reduced price.

input3: An integer array representing the prices of items.

Output Specification:

Return an integer value representing the total cost achievable using the given maximum discount offer.

Example 1:

input1:5

input2:3

input3: (5,7,10,3,2)

Output: 12

Explanation:

Here, the given price array is (5,7,10,3,2) and the value of K = 3. Therefore, we can buy 3 most expensive items to get maximum discount. So, we take the items with prices 10+7+5=22. The total cost achievable using the given maximum discount offer is 22-10 12. Therefore, 12 is returned as the output.

Example 2:

input 1:3

input2:1

input3: (9,5,7)

Output:0

Explanation:

Here the given price array is (9,5,7) and the value of K = 1. Therefore, we can buy 1 item with maximum price to get maximum discount. So, we take the item with price 9. The total cost achievable using the given maximum discount offer is 9-9 = 0. Therefore, 0 is returned as the output.


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


import java.util.*;
class Main
{
	static void bubble(int a[], int n)
	{
		int i, j, t;
		for(i =0;i<n;i++)
		{
			for(j =0;j<n-i-1;j++)
			{
				if(a[j] < a[j+1])
				{
					t = a[j];
					a[j] = a[j+1];
					a[j+1] = t;
				}
			}
		}
	}
  public static void main(String args[])
  {
	  Scanner sc = new Scanner(System.in);
	  int n = sc.nextInt();
	  int k = sc.nextInt();
	  int a[] = new int[n];
	  int max = 0;
	  for(int i =0;i<n;i++)
	  {
		  a[i] = sc.nextInt();
		  if(a[i] > max)
		  {
			  max = a[i];
		  }
	  }
	  bubble(a,n);
	  int sum = 0;
	  for(int i =0;i<k;i++)
	  {
		  sum += a[i];
	  }
	  int r = sum - max;
      System.out.println(r);
  }
}
